name: Nekton CI

on:
  push:
    branches:
      - master

jobs:
  component-library-ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install
        run: |
          npx yarn
          npx lerna bootstrap
      - name: Lint
        run: npx yarn workspace @nekton/component-library run lint
      - name: Build
        run: npx yarn workspace @nekton/component-library run build-storybook
      - name: Unit tests
        run: npx yarn workspace @nekton/component-library test:unit
      - uses: actions/checkout@master
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: ${{ secrets.DOCKER_COMPONENT_LIBRARY_CONTAINER }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          workdir: ./packages/component-library

        env:
          CI: true

  dive-log-ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install
        run: |
          npx yarn
          npx lerna bootstrap
      - name: Lint
        run: npx yarn workspace @nekton/dive-log run lint;
      - name: Build
        run: npx yarn workspace @nekton/dive-log run compile
      - name: Unit tests
        run: npx yarn workspace @nekton/dive-log test:unit
        env:
          CI: true
      - name: Deploy
        uses: "maddox/actions/ssh@master"
        with:
          args:
            - docker kill ${{ secrets.DOCKER_CONTAINER_NAME }}
            - docker rm ${{ secrets.DOCKER_CONTAINER_COMPONENT_LIBRARY_ALIAS }}
            - docker pull ${{ secrets.DOCKER_COMPONENT_LIBRARY_CONTAINER }}
            - docker run --name ${{ secrets.DOCKER_CONTAINER_COMPONENT_LIBRARY_ALIAS }} -p 80:80 -d ${{ DOCKER_COMPONENT_LIBRARY_CONTAINER }}
            - exit
          secrets:
            - ${{ secrets.PRIVATE_SSH_KEY }}
            - ${{ secrets.DIGITAL_OCEAN_DROPLET_HOST }}
            - ${{ secrets.DIGITAL_OCEAN_DROPLET_USER }}
